// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_hotspot_func_hls (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_0_V_data_V_dout,
        in_stream_0_V_data_V_empty_n,
        in_stream_0_V_data_V_read,
        in_stream_0_V_keep_V_dout,
        in_stream_0_V_keep_V_empty_n,
        in_stream_0_V_keep_V_read,
        in_stream_0_V_strb_V_dout,
        in_stream_0_V_strb_V_empty_n,
        in_stream_0_V_strb_V_read,
        in_stream_0_V_user_V_dout,
        in_stream_0_V_user_V_empty_n,
        in_stream_0_V_user_V_read,
        in_stream_0_V_last_V_dout,
        in_stream_0_V_last_V_empty_n,
        in_stream_0_V_last_V_read,
        in_stream_0_V_id_V_dout,
        in_stream_0_V_id_V_empty_n,
        in_stream_0_V_id_V_read,
        in_stream_0_V_dest_V_dout,
        in_stream_0_V_dest_V_empty_n,
        in_stream_0_V_dest_V_read,
        in_stream_1_V_data_V_dout,
        in_stream_1_V_data_V_empty_n,
        in_stream_1_V_data_V_read,
        in_stream_1_V_keep_V_dout,
        in_stream_1_V_keep_V_empty_n,
        in_stream_1_V_keep_V_read,
        in_stream_1_V_strb_V_dout,
        in_stream_1_V_strb_V_empty_n,
        in_stream_1_V_strb_V_read,
        in_stream_1_V_user_V_dout,
        in_stream_1_V_user_V_empty_n,
        in_stream_1_V_user_V_read,
        in_stream_1_V_last_V_dout,
        in_stream_1_V_last_V_empty_n,
        in_stream_1_V_last_V_read,
        in_stream_1_V_id_V_dout,
        in_stream_1_V_id_V_empty_n,
        in_stream_1_V_id_V_read,
        in_stream_1_V_dest_V_dout,
        in_stream_1_V_dest_V_empty_n,
        in_stream_1_V_dest_V_read,
        out_stream_V_data_V_din,
        out_stream_V_data_V_full_n,
        out_stream_V_data_V_write,
        out_stream_V_keep_V_din,
        out_stream_V_keep_V_full_n,
        out_stream_V_keep_V_write,
        out_stream_V_strb_V_din,
        out_stream_V_strb_V_full_n,
        out_stream_V_strb_V_write,
        out_stream_V_user_V_din,
        out_stream_V_user_V_full_n,
        out_stream_V_user_V_write,
        out_stream_V_last_V_din,
        out_stream_V_last_V_full_n,
        out_stream_V_last_V_write,
        out_stream_V_id_V_din,
        out_stream_V_id_V_full_n,
        out_stream_V_id_V_write,
        out_stream_V_dest_V_din,
        out_stream_V_dest_V_full_n,
        out_stream_V_dest_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 81'b1;
parameter    ap_ST_st2_fsm_1 = 81'b10;
parameter    ap_ST_st3_fsm_2 = 81'b100;
parameter    ap_ST_st4_fsm_3 = 81'b1000;
parameter    ap_ST_st5_fsm_4 = 81'b10000;
parameter    ap_ST_st6_fsm_5 = 81'b100000;
parameter    ap_ST_st7_fsm_6 = 81'b1000000;
parameter    ap_ST_st8_fsm_7 = 81'b10000000;
parameter    ap_ST_st9_fsm_8 = 81'b100000000;
parameter    ap_ST_st10_fsm_9 = 81'b1000000000;
parameter    ap_ST_st11_fsm_10 = 81'b10000000000;
parameter    ap_ST_st12_fsm_11 = 81'b100000000000;
parameter    ap_ST_st13_fsm_12 = 81'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 81'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 81'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 81'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 81'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 81'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 81'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 81'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 81'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 81'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 81'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 81'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 81'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 81'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 81'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 81'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 81'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 81'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 81'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 81'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 81'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 81'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 81'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 81'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 81'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 81'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 81'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 81'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 81'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 81'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 81'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 81'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 81'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 81'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 81'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 81'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 81'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 81'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 81'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 81'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 81'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 81'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 81'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 81'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 81'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 81'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 81'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 81'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 81'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 81'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 81'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 81'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 81'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 81'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 81'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 81'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 81'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 81'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 81'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 81'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 81'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 81'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 81'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 81'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 81'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 81'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 81'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 81'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 81'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_42A00000 = 32'b1000010101000000000000000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_384D8559 = 32'b111000010011011000010101011001;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv64_4000000000000000 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FB99999A0000000 = 64'b11111110111001100110011001100110100000000000000000000000000000;
parameter    ap_const_lv64_3F565D39A0000000 = 64'b11111101010110010111010011100110100000000000000000000000000000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv11_401 = 11'b10000000001;
parameter    ap_const_lv11_402 = 11'b10000000010;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv21_402 = 21'b10000000010;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv21_1 = 21'b1;
parameter    ap_const_lv21_404 = 21'b10000000100;
parameter    ap_const_lv11_2 = 11'b10;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_401 = 32'b10000000001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_stream_0_V_data_V_dout;
input   in_stream_0_V_data_V_empty_n;
output   in_stream_0_V_data_V_read;
input  [3:0] in_stream_0_V_keep_V_dout;
input   in_stream_0_V_keep_V_empty_n;
output   in_stream_0_V_keep_V_read;
input  [3:0] in_stream_0_V_strb_V_dout;
input   in_stream_0_V_strb_V_empty_n;
output   in_stream_0_V_strb_V_read;
input  [3:0] in_stream_0_V_user_V_dout;
input   in_stream_0_V_user_V_empty_n;
output   in_stream_0_V_user_V_read;
input  [0:0] in_stream_0_V_last_V_dout;
input   in_stream_0_V_last_V_empty_n;
output   in_stream_0_V_last_V_read;
input  [4:0] in_stream_0_V_id_V_dout;
input   in_stream_0_V_id_V_empty_n;
output   in_stream_0_V_id_V_read;
input  [4:0] in_stream_0_V_dest_V_dout;
input   in_stream_0_V_dest_V_empty_n;
output   in_stream_0_V_dest_V_read;
input  [31:0] in_stream_1_V_data_V_dout;
input   in_stream_1_V_data_V_empty_n;
output   in_stream_1_V_data_V_read;
input  [3:0] in_stream_1_V_keep_V_dout;
input   in_stream_1_V_keep_V_empty_n;
output   in_stream_1_V_keep_V_read;
input  [3:0] in_stream_1_V_strb_V_dout;
input   in_stream_1_V_strb_V_empty_n;
output   in_stream_1_V_strb_V_read;
input  [3:0] in_stream_1_V_user_V_dout;
input   in_stream_1_V_user_V_empty_n;
output   in_stream_1_V_user_V_read;
input  [0:0] in_stream_1_V_last_V_dout;
input   in_stream_1_V_last_V_empty_n;
output   in_stream_1_V_last_V_read;
input  [4:0] in_stream_1_V_id_V_dout;
input   in_stream_1_V_id_V_empty_n;
output   in_stream_1_V_id_V_read;
input  [4:0] in_stream_1_V_dest_V_dout;
input   in_stream_1_V_dest_V_empty_n;
output   in_stream_1_V_dest_V_read;
output  [31:0] out_stream_V_data_V_din;
input   out_stream_V_data_V_full_n;
output   out_stream_V_data_V_write;
output  [3:0] out_stream_V_keep_V_din;
input   out_stream_V_keep_V_full_n;
output   out_stream_V_keep_V_write;
output  [3:0] out_stream_V_strb_V_din;
input   out_stream_V_strb_V_full_n;
output   out_stream_V_strb_V_write;
output  [3:0] out_stream_V_user_V_din;
input   out_stream_V_user_V_full_n;
output   out_stream_V_user_V_write;
output  [0:0] out_stream_V_last_V_din;
input   out_stream_V_last_V_full_n;
output   out_stream_V_last_V_write;
output  [4:0] out_stream_V_id_V_din;
input   out_stream_V_id_V_full_n;
output   out_stream_V_id_V_write;
output  [4:0] out_stream_V_dest_V_din;
input   out_stream_V_dest_V_full_n;
output   out_stream_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [80:0] ap_CS_fsm = 81'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_99;
wire   [31:0] lineBuff_val_1_q0;
reg   [31:0] reg_543;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_195;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_202;
wire   [31:0] lineBuff_val_2_q0;
reg   [31:0] reg_550;
wire   [31:0] grp_fu_496_p2;
reg   [31:0] reg_556;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_214;
reg   [0:0] or_cond3_reg_1069;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_226;
wire   [63:0] grp_fu_509_p1;
reg   [63:0] reg_562;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_237;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_245;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_bdd_254;
wire   [63:0] grp_fu_523_p2;
reg   [63:0] reg_568;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_bdd_265;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_274;
wire   [63:0] grp_fu_515_p2;
reg   [63:0] reg_574;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_285;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_bdd_295;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_304;
wire   [10:0] i_1_fu_607_p2;
reg   [10:0] i_1_reg_946;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_315;
wire   [20:0] countWait_2_fu_613_p2;
reg   [20:0] countWait_2_reg_951;
wire   [0:0] exitcond1_fu_601_p2;
wire   [0:0] grp_fu_530_p2;
reg   [0:0] tmp_1_reg_956;
wire   [10:0] j_1_fu_625_p2;
reg   [10:0] j_1_reg_964;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_331;
wire    in_stream_0_V_id_V0_status;
wire   [0:0] exitcond2_fu_619_p2;
wire   [0:0] tmp_7_fu_643_p2;
wire   [0:0] tmp_11_fu_661_p2;
wire    in_stream_1_V_id_V0_status;
reg    ap_sig_bdd_348;
wire   [0:0] tmp_4_fu_631_p2;
reg   [0:0] tmp_4_reg_969;
wire   [63:0] tmp_9_fu_675_p1;
reg   [63:0] tmp_9_reg_990;
reg   [10:0] lineBuff_val_1_addr_reg_996;
reg   [10:0] lineBuff_val_2_addr_reg_1001;
reg   [10:0] lineBuff_power_val_2_addr_reg_1006;
wire   [0:0] icmp1_fu_692_p2;
reg   [0:0] icmp1_reg_1011;
wire   [20:0] tmp_s_fu_698_p2;
reg   [20:0] tmp_s_reg_1017;
wire   [0:0] p_not_fu_704_p2;
reg   [0:0] p_not_reg_1022;
wire   [31:0] lineBuff_power_val_2_q0;
reg   [31:0] lineBuff_power_val_2_load_reg_1027;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_382;
wire   [10:0] tmp_12_fu_723_p1;
reg   [10:0] tmp_12_reg_1037;
wire   [10:0] pixConvolved_1_fu_727_p2;
reg   [10:0] pixConvolved_1_reg_1043;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_395;
wire   [10:0] col_assign_1_0_2_fu_739_p2;
reg   [10:0] col_assign_1_0_2_reg_1054;
wire   [0:0] or_cond3_fu_760_p2;
wire   [10:0] pixConvolved_2_fu_765_p3;
reg   [10:0] pixConvolved_2_reg_1075;
wire   [0:0] or_cond82_not_demorgan_fu_771_p2;
reg   [0:0] or_cond82_not_demorgan_reg_1080;
wire   [31:0] lineBuff_val_0_q0;
reg   [31:0] windowTemp_val_0_1_reg_1085;
wire   [0:0] brmerge_fu_789_p2;
reg   [0:0] brmerge_reg_1100;
reg   [31:0] windowTemp_val_1_0_reg_1104;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_423;
wire   [31:0] lineBuff_val_1_q1;
reg   [31:0] windowTemp_val_1_2_reg_1109;
reg   [63:0] tmp_i_reg_1114;
reg   [31:0] tmp_22_i_reg_1120;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_435;
wire   [63:0] tmp_23_i_fu_512_p1;
reg   [63:0] tmp_23_i_reg_1125;
wire   [63:0] grp_fu_519_p2;
reg   [63:0] tmp_24_i_reg_1130;
wire   [10:0] tmp_15_fu_797_p1;
reg   [10:0] tmp_15_reg_1135;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_449;
wire   [10:0] pixConvolved_Power_1_fu_801_p2;
reg   [10:0] pixConvolved_Power_1_reg_1140;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_460;
wire   [10:0] pixConvolved_Power_2_fu_811_p3;
reg   [10:0] pixConvolved_Power_2_reg_1151;
wire   [31:0] lineBuff_power_val_1_q0;
reg   [31:0] windowPower_val_1_1_reg_1156;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_472;
wire   [31:0] grp_fu_501_p2;
reg   [31:0] tmp_28_i_reg_1161;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_482;
wire   [31:0] grp_fu_506_p1;
reg   [31:0] result_reg_1166;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_492;
wire   [0:0] tmp_last_V_fu_816_p2;
reg   [0:0] tmp_last_V_reg_1171;
reg   [10:0] lineBuff_val_0_address0;
reg    lineBuff_val_0_ce0;
reg    lineBuff_val_0_we0;
wire   [31:0] lineBuff_val_0_d0;
reg   [10:0] lineBuff_val_1_address0;
reg    lineBuff_val_1_ce0;
reg    lineBuff_val_1_we0;
wire   [31:0] lineBuff_val_1_d0;
wire   [10:0] lineBuff_val_1_address1;
reg    lineBuff_val_1_ce1;
reg   [10:0] lineBuff_val_2_address0;
reg    lineBuff_val_2_ce0;
reg    lineBuff_val_2_we0;
wire   [31:0] lineBuff_val_2_d0;
reg   [10:0] lineBuff_power_val_1_address0;
reg    lineBuff_power_val_1_ce0;
reg    lineBuff_power_val_1_we0;
wire   [31:0] lineBuff_power_val_1_d0;
reg   [10:0] lineBuff_power_val_2_address0;
reg    lineBuff_power_val_2_ce0;
reg    lineBuff_power_val_2_we0;
wire   [31:0] lineBuff_power_val_2_d0;
wire   [10:0] i_phi_fu_426_p4;
reg   [10:0] i_reg_422;
reg   [20:0] countWait_reg_434;
reg   [10:0] j_reg_446;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_561;
wire    out_stream_V_id_V1_status;
reg    ap_sig_bdd_566;
reg   [20:0] countWait_1_reg_457;
reg   [31:0] converterB_reg_467;
reg   [31:0] converterA_reg_481;
wire   [63:0] tmp_23_0_1_fu_733_p1;
wire   [63:0] tmp_6_fu_776_p1;
wire   [63:0] tmp_23_0_2_fu_780_p1;
wire   [63:0] tmp_35_0_1_fu_807_p1;
reg    in_stream_0_V_id_V0_update;
reg    in_stream_1_V_id_V0_update;
reg    out_stream_V_id_V1_update;
reg   [31:0] pixConvolved_Power_fu_220;
wire   [31:0] pixConvolved_Power_3_cast_fu_891_p1;
reg   [31:0] pixConvolved_fu_224;
wire   [31:0] pixConvolved_3_cast_fu_880_p1;
reg   [31:0] idxRow_fu_228;
wire   [31:0] idxRow_2_fu_865_p3;
reg   [31:0] idxCol_fu_232;
wire   [31:0] idxCol_2_cast_fu_861_p1;
reg   [31:0] grp_fu_496_p0;
reg   [31:0] grp_fu_496_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_660;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_667;
wire   [31:0] grp_fu_501_p0;
wire   [31:0] grp_fu_501_p1;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_677;
wire   [63:0] grp_fu_506_p0;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_685;
reg   [31:0] grp_fu_509_p0;
wire   [31:0] tmp_23_i_fu_512_p0;
reg   [63:0] grp_fu_515_p0;
reg   [63:0] grp_fu_515_p1;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_696;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_703;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_711;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_bdd_718;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_bdd_726;
wire   [63:0] grp_fu_519_p0;
wire   [63:0] grp_fu_519_p1;
reg   [63:0] grp_fu_523_p0;
reg   [63:0] grp_fu_523_p1;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_742;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_749;
reg   [10:0] grp_fu_530_p0;
wire   [0:0] tmp_5_fu_637_p2;
wire   [0:0] tmp_10_fu_655_p2;
wire   [0:0] tmp_8_fu_649_p2;
wire   [30:0] tmp_17_fu_682_p4;
wire   [30:0] tmp_16_fu_744_p4;
wire   [0:0] icmp_fu_754_p2;
wire   [0:0] or_cond82_not_fu_784_p2;
wire   [31:0] tmp_fu_820_p1;
wire   [10:0] tmp_18_fu_837_p1;
wire   [0:0] tmp_13_fu_831_p2;
wire   [10:0] idxCol_1_fu_841_p2;
wire   [10:0] idxCol_2_fu_853_p3;
wire   [31:0] idxRow_1_fu_847_p2;
wire   [10:0] pixConvolved_3_fu_873_p3;
wire   [10:0] pixConvolved_Power_3_fu_884_p3;
reg   [1:0] grp_fu_496_opcode;
wire    grp_fu_496_ce;
wire    grp_fu_501_ce;
wire    grp_fu_506_ce;
reg   [1:0] grp_fu_515_opcode;
wire    grp_fu_515_ce;
wire    grp_fu_519_ce;
wire    grp_fu_523_ce;
reg   [80:0] ap_NS_fsm;


hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_val_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_val_0_address0 ),
    .ce0( lineBuff_val_0_ce0 ),
    .we0( lineBuff_val_0_we0 ),
    .d0( lineBuff_val_0_d0 ),
    .q0( lineBuff_val_0_q0 )
);

hls_hotspot_func_hls_lineBuff_val_1 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_val_1_address0 ),
    .ce0( lineBuff_val_1_ce0 ),
    .we0( lineBuff_val_1_we0 ),
    .d0( lineBuff_val_1_d0 ),
    .q0( lineBuff_val_1_q0 ),
    .address1( lineBuff_val_1_address1 ),
    .ce1( lineBuff_val_1_ce1 ),
    .q1( lineBuff_val_1_q1 )
);

hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_val_2_address0 ),
    .ce0( lineBuff_val_2_ce0 ),
    .we0( lineBuff_val_2_we0 ),
    .d0( lineBuff_val_2_d0 ),
    .q0( lineBuff_val_2_q0 )
);

hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_power_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_power_val_1_address0 ),
    .ce0( lineBuff_power_val_1_ce0 ),
    .we0( lineBuff_power_val_1_we0 ),
    .d0( lineBuff_power_val_1_d0 ),
    .q0( lineBuff_power_val_1_q0 )
);

hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_power_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_power_val_2_address0 ),
    .ce0( lineBuff_power_val_2_ce0 ),
    .we0( lineBuff_power_val_2_we0 ),
    .d0( lineBuff_power_val_2_d0 ),
    .q0( lineBuff_power_val_2_q0 )
);

hls_hotspot_faddfsub_32ns_32ns_32_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_hotspot_faddfsub_32ns_32ns_32_9_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_496_p0 ),
    .din1( grp_fu_496_p1 ),
    .opcode( grp_fu_496_opcode ),
    .ce( grp_fu_496_ce ),
    .dout( grp_fu_496_p2 )
);

hls_hotspot_fmul_32ns_32ns_32_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_hotspot_fmul_32ns_32ns_32_5_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_501_p0 ),
    .din1( grp_fu_501_p1 ),
    .ce( grp_fu_501_ce ),
    .dout( grp_fu_501_p2 )
);

hls_hotspot_fptrunc_64ns_32_2 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
hls_hotspot_fptrunc_64ns_32_2_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_506_p0 ),
    .ce( grp_fu_506_ce ),
    .dout( grp_fu_506_p1 )
);

hls_hotspot_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_hotspot_fpext_32ns_64_1_U3(
    .din0( grp_fu_509_p0 ),
    .dout( grp_fu_509_p1 )
);

hls_hotspot_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_hotspot_fpext_32ns_64_1_U4(
    .din0( tmp_23_i_fu_512_p0 ),
    .dout( tmp_23_i_fu_512_p1 )
);

hls_hotspot_dadddsub_64ns_64ns_64_8_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_hotspot_dadddsub_64ns_64ns_64_8_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_515_p0 ),
    .din1( grp_fu_515_p1 ),
    .opcode( grp_fu_515_opcode ),
    .ce( grp_fu_515_ce ),
    .dout( grp_fu_515_p2 )
);

hls_hotspot_dsub_64ns_64ns_64_8_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_hotspot_dsub_64ns_64ns_64_8_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_519_p0 ),
    .din1( grp_fu_519_p1 ),
    .ce( grp_fu_519_ce ),
    .dout( grp_fu_519_p2 )
);

hls_hotspot_dmul_64ns_64ns_64_10_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_hotspot_dmul_64ns_64ns_64_10_max_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_523_p0 ),
    .din1( grp_fu_523_p1 ),
    .ce( grp_fu_523_ce ),
    .dout( grp_fu_523_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & ~ap_sig_bdd_348 & ~(ap_const_lv1_0 == tmp_7_fu_643_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & ~ap_sig_bdd_348 & ~(ap_const_lv1_0 == tmp_11_fu_661_p2)))) begin
        converterA_reg_481 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & (ap_const_lv1_0 == tmp_11_fu_661_p2) & ~ap_sig_bdd_348)) begin
        converterA_reg_481 <= in_stream_0_V_data_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & ~ap_sig_bdd_348 & ~(ap_const_lv1_0 == tmp_7_fu_643_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & ~ap_sig_bdd_348 & ~(ap_const_lv1_0 == tmp_11_fu_661_p2)))) begin
        converterB_reg_467 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & (ap_const_lv1_0 == tmp_11_fu_661_p2) & ~ap_sig_bdd_348)) begin
        converterB_reg_467 <= in_stream_1_V_data_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~ap_sig_bdd_566)) begin
        countWait_1_reg_457 <= tmp_s_reg_1017;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_601_p2))) begin
        countWait_1_reg_457 <= countWait_reg_434;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_348 & ~(ap_const_lv1_0 == exitcond2_fu_619_p2))) begin
        countWait_reg_434 <= countWait_2_reg_951;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        countWait_reg_434 <= ap_const_lv21_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_348 & ~(ap_const_lv1_0 == exitcond2_fu_619_p2))) begin
        i_reg_422 <= i_1_reg_946;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_422 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~ap_sig_bdd_566)) begin
        idxCol_fu_232[0] <= idxCol_2_cast_fu_861_p1[0];
        idxCol_fu_232[1] <= idxCol_2_cast_fu_861_p1[1];
        idxCol_fu_232[2] <= idxCol_2_cast_fu_861_p1[2];
        idxCol_fu_232[3] <= idxCol_2_cast_fu_861_p1[3];
        idxCol_fu_232[4] <= idxCol_2_cast_fu_861_p1[4];
        idxCol_fu_232[5] <= idxCol_2_cast_fu_861_p1[5];
        idxCol_fu_232[6] <= idxCol_2_cast_fu_861_p1[6];
        idxCol_fu_232[7] <= idxCol_2_cast_fu_861_p1[7];
        idxCol_fu_232[8] <= idxCol_2_cast_fu_861_p1[8];
        idxCol_fu_232[9] <= idxCol_2_cast_fu_861_p1[9];
        idxCol_fu_232[10] <= idxCol_2_cast_fu_861_p1[10];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        idxCol_fu_232[0] <= 1'b0;
        idxCol_fu_232[1] <= 1'b0;
        idxCol_fu_232[2] <= 1'b0;
        idxCol_fu_232[3] <= 1'b0;
        idxCol_fu_232[4] <= 1'b0;
        idxCol_fu_232[5] <= 1'b0;
        idxCol_fu_232[6] <= 1'b0;
        idxCol_fu_232[7] <= 1'b0;
        idxCol_fu_232[8] <= 1'b0;
        idxCol_fu_232[9] <= 1'b0;
        idxCol_fu_232[10] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~ap_sig_bdd_566)) begin
        idxRow_fu_228 <= idxRow_2_fu_865_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        idxRow_fu_228 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~ap_sig_bdd_566)) begin
        j_reg_446 <= j_1_reg_964;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_601_p2))) begin
        j_reg_446 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~ap_sig_bdd_566)) begin
        pixConvolved_Power_fu_220[0] <= pixConvolved_Power_3_cast_fu_891_p1[0];
        pixConvolved_Power_fu_220[1] <= pixConvolved_Power_3_cast_fu_891_p1[1];
        pixConvolved_Power_fu_220[2] <= pixConvolved_Power_3_cast_fu_891_p1[2];
        pixConvolved_Power_fu_220[3] <= pixConvolved_Power_3_cast_fu_891_p1[3];
        pixConvolved_Power_fu_220[4] <= pixConvolved_Power_3_cast_fu_891_p1[4];
        pixConvolved_Power_fu_220[5] <= pixConvolved_Power_3_cast_fu_891_p1[5];
        pixConvolved_Power_fu_220[6] <= pixConvolved_Power_3_cast_fu_891_p1[6];
        pixConvolved_Power_fu_220[7] <= pixConvolved_Power_3_cast_fu_891_p1[7];
        pixConvolved_Power_fu_220[8] <= pixConvolved_Power_3_cast_fu_891_p1[8];
        pixConvolved_Power_fu_220[9] <= pixConvolved_Power_3_cast_fu_891_p1[9];
        pixConvolved_Power_fu_220[10] <= pixConvolved_Power_3_cast_fu_891_p1[10];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        pixConvolved_Power_fu_220[0] <= 1'b0;
        pixConvolved_Power_fu_220[1] <= 1'b0;
        pixConvolved_Power_fu_220[2] <= 1'b0;
        pixConvolved_Power_fu_220[3] <= 1'b0;
        pixConvolved_Power_fu_220[4] <= 1'b0;
        pixConvolved_Power_fu_220[5] <= 1'b0;
        pixConvolved_Power_fu_220[6] <= 1'b0;
        pixConvolved_Power_fu_220[7] <= 1'b0;
        pixConvolved_Power_fu_220[8] <= 1'b0;
        pixConvolved_Power_fu_220[9] <= 1'b0;
        pixConvolved_Power_fu_220[10] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~ap_sig_bdd_566)) begin
        pixConvolved_fu_224[0] <= pixConvolved_3_cast_fu_880_p1[0];
        pixConvolved_fu_224[1] <= pixConvolved_3_cast_fu_880_p1[1];
        pixConvolved_fu_224[2] <= pixConvolved_3_cast_fu_880_p1[2];
        pixConvolved_fu_224[3] <= pixConvolved_3_cast_fu_880_p1[3];
        pixConvolved_fu_224[4] <= pixConvolved_3_cast_fu_880_p1[4];
        pixConvolved_fu_224[5] <= pixConvolved_3_cast_fu_880_p1[5];
        pixConvolved_fu_224[6] <= pixConvolved_3_cast_fu_880_p1[6];
        pixConvolved_fu_224[7] <= pixConvolved_3_cast_fu_880_p1[7];
        pixConvolved_fu_224[8] <= pixConvolved_3_cast_fu_880_p1[8];
        pixConvolved_fu_224[9] <= pixConvolved_3_cast_fu_880_p1[9];
        pixConvolved_fu_224[10] <= pixConvolved_3_cast_fu_880_p1[10];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        pixConvolved_fu_224[0] <= 1'b0;
        pixConvolved_fu_224[1] <= 1'b0;
        pixConvolved_fu_224[2] <= 1'b0;
        pixConvolved_fu_224[3] <= 1'b0;
        pixConvolved_fu_224[4] <= 1'b0;
        pixConvolved_fu_224[5] <= 1'b0;
        pixConvolved_fu_224[6] <= 1'b0;
        pixConvolved_fu_224[7] <= 1'b0;
        pixConvolved_fu_224[8] <= 1'b0;
        pixConvolved_fu_224[9] <= 1'b0;
        pixConvolved_fu_224[10] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        brmerge_reg_1100 <= brmerge_fu_789_p2;
        windowTemp_val_0_1_reg_1085 <= lineBuff_val_0_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        col_assign_1_0_2_reg_1054 <= col_assign_1_0_2_fu_739_p2;
        or_cond3_reg_1069 <= or_cond3_fu_760_p2;
        or_cond82_not_demorgan_reg_1080 <= or_cond82_not_demorgan_fu_771_p2;
        pixConvolved_2_reg_1075 <= pixConvolved_2_fu_765_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_601_p2))) begin
        countWait_2_reg_951 <= countWait_2_fu_613_p2;
        tmp_1_reg_956 <= grp_fu_530_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_946 <= i_1_fu_607_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & ~ap_sig_bdd_348)) begin
        icmp1_reg_1011 <= icmp1_fu_692_p2;
        lineBuff_power_val_2_addr_reg_1006 <= tmp_9_fu_675_p1;
        lineBuff_val_1_addr_reg_996 <= tmp_9_fu_675_p1;
        lineBuff_val_2_addr_reg_1001 <= tmp_9_fu_675_p1;
        p_not_reg_1022 <= p_not_fu_704_p2;
        tmp_4_reg_969 <= tmp_4_fu_631_p2;
        tmp_9_reg_990[0] <= tmp_9_fu_675_p1[0];
tmp_9_reg_990[1] <= tmp_9_fu_675_p1[1];
tmp_9_reg_990[2] <= tmp_9_fu_675_p1[2];
tmp_9_reg_990[3] <= tmp_9_fu_675_p1[3];
tmp_9_reg_990[4] <= tmp_9_fu_675_p1[4];
tmp_9_reg_990[5] <= tmp_9_fu_675_p1[5];
tmp_9_reg_990[6] <= tmp_9_fu_675_p1[6];
tmp_9_reg_990[7] <= tmp_9_fu_675_p1[7];
tmp_9_reg_990[8] <= tmp_9_fu_675_p1[8];
tmp_9_reg_990[9] <= tmp_9_fu_675_p1[9];
tmp_9_reg_990[10] <= tmp_9_fu_675_p1[10];
        tmp_s_reg_1017 <= tmp_s_fu_698_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_348)) begin
        j_1_reg_964 <= j_1_fu_625_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_power_val_2_load_reg_1027 <= lineBuff_power_val_2_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        pixConvolved_1_reg_1043 <= pixConvolved_1_fu_727_p2;
        tmp_12_reg_1037 <= tmp_12_fu_723_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        pixConvolved_Power_1_reg_1140 <= pixConvolved_Power_1_fu_801_p2;
        tmp_15_reg_1135 <= tmp_15_fu_797_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        pixConvolved_Power_2_reg_1151 <= pixConvolved_Power_2_fu_811_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        reg_543 <= lineBuff_val_1_q0;
        reg_550 <= lineBuff_val_2_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~(or_cond3_reg_1069 == ap_const_lv1_0)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45)))) begin
        reg_556 <= grp_fu_496_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)))) begin
        reg_562 <= grp_fu_509_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)))) begin
        reg_568 <= grp_fu_523_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_43)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)))) begin
        reg_574 <= grp_fu_515_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79))) begin
        result_reg_1166 <= grp_fu_506_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        tmp_22_i_reg_1120 <= grp_fu_496_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        tmp_23_i_reg_1125 <= tmp_23_i_fu_512_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25))) begin
        tmp_24_i_reg_1130 <= grp_fu_519_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50))) begin
        tmp_28_i_reg_1161 <= grp_fu_501_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        tmp_i_reg_1114 <= grp_fu_509_p1;
        windowTemp_val_1_0_reg_1104 <= lineBuff_val_1_q0;
        windowTemp_val_1_2_reg_1109 <= lineBuff_val_1_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & (ap_const_lv1_0 == brmerge_reg_1100))) begin
        tmp_last_V_reg_1171 <= tmp_last_V_fu_816_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34))) begin
        windowPower_val_1_1_reg_1156 <= lineBuff_power_val_1_q0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_601_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_601_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_601_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_601_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_214)
begin
    if (ap_sig_bdd_214) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_435)
begin
    if (ap_sig_bdd_435) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_237)
begin
    if (ap_sig_bdd_237) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_696)
begin
    if (ap_sig_bdd_696) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_99)
begin
    if (ap_sig_bdd_99) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_285)
begin
    if (ap_sig_bdd_285) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_742)
begin
    if (ap_sig_bdd_742) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_315)
begin
    if (ap_sig_bdd_315) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_449)
begin
    if (ap_sig_bdd_449) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_33 assign process. ///
always @ (ap_sig_bdd_460)
begin
    if (ap_sig_bdd_460) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_472)
begin
    if (ap_sig_bdd_472) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_245)
begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_703)
begin
    if (ap_sig_bdd_703) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_667)
begin
    if (ap_sig_bdd_667) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_331)
begin
    if (ap_sig_bdd_331) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_43 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_711)
begin
    if (ap_sig_bdd_711) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_45 assign process. ///
always @ (ap_sig_bdd_226)
begin
    if (ap_sig_bdd_226) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_46 assign process. ///
always @ (ap_sig_bdd_677)
begin
    if (ap_sig_bdd_677) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_195)
begin
    if (ap_sig_bdd_195) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_50 assign process. ///
always @ (ap_sig_bdd_482)
begin
    if (ap_sig_bdd_482) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st52_fsm_51 assign process. ///
always @ (ap_sig_bdd_254)
begin
    if (ap_sig_bdd_254) begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st53_fsm_52 assign process. ///
always @ (ap_sig_bdd_718)
begin
    if (ap_sig_bdd_718) begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_382)
begin
    if (ap_sig_bdd_382) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_59 assign process. ///
always @ (ap_sig_bdd_295)
begin
    if (ap_sig_bdd_295) begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_60 assign process. ///
always @ (ap_sig_bdd_749)
begin
    if (ap_sig_bdd_749) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_395)
begin
    if (ap_sig_bdd_395) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_274)
begin
    if (ap_sig_bdd_274) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_70 assign process. ///
always @ (ap_sig_bdd_726)
begin
    if (ap_sig_bdd_726) begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_77 assign process. ///
always @ (ap_sig_bdd_304)
begin
    if (ap_sig_bdd_304) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st79_fsm_78 assign process. ///
always @ (ap_sig_bdd_685)
begin
    if (ap_sig_bdd_685) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_202)
begin
    if (ap_sig_bdd_202) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st80_fsm_79 assign process. ///
always @ (ap_sig_bdd_492)
begin
    if (ap_sig_bdd_492) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st81_fsm_80 assign process. ///
always @ (ap_sig_bdd_561)
begin
    if (ap_sig_bdd_561) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_423)
begin
    if (ap_sig_bdd_423) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_660)
begin
    if (ap_sig_bdd_660) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_fu_496_opcode assign process. ///
always @ (or_cond3_reg_1069 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st38_fsm_37)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        grp_fu_496_opcode = ap_const_lv2_1;
    end else if (((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)))) begin
        grp_fu_496_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_496_opcode = 'bx;
    end
end

/// grp_fu_496_p0 assign process. ///
always @ (reg_550 or ap_sig_cseq_ST_st8_fsm_7 or windowTemp_val_1_2_reg_1109 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st38_fsm_37)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_496_p0 = ap_const_lv32_42A00000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_496_p0 = windowTemp_val_1_2_reg_1109;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_496_p0 = reg_550;
    end else begin
        grp_fu_496_p0 = 'bx;
    end
end

/// grp_fu_496_p1 assign process. ///
always @ (reg_543 or windowTemp_val_0_1_reg_1085 or windowTemp_val_1_0_reg_1104 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st38_fsm_37)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_496_p1 = reg_543;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_496_p1 = windowTemp_val_1_0_reg_1104;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_496_p1 = windowTemp_val_0_1_reg_1085;
    end else begin
        grp_fu_496_p1 = 'bx;
    end
end

/// grp_fu_509_p0 assign process. ///
always @ (reg_543 or reg_556 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st36_fsm_35 or ap_sig_cseq_ST_st52_fsm_51 or ap_sig_cseq_ST_st8_fsm_7 or windowPower_val_1_1_reg_1156 or tmp_28_i_reg_1161)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_509_p0 = tmp_28_i_reg_1161;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        grp_fu_509_p0 = windowPower_val_1_1_reg_1156;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_509_p0 = reg_556;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_509_p0 = reg_543;
    end else begin
        grp_fu_509_p0 = 'bx;
    end
end

/// grp_fu_515_opcode assign process. ///
always @ (or_cond3_reg_1069 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st45_fsm_44 or ap_sig_cseq_ST_st53_fsm_52 or ap_sig_cseq_ST_st71_fsm_70)
begin
    if ((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        grp_fu_515_opcode = ap_const_lv2_1;
    end else if (((~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52)) | (~(or_cond3_reg_1069 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)))) begin
        grp_fu_515_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_515_opcode = 'bx;
    end
end

/// grp_fu_515_p0 assign process. ///
always @ (reg_562 or reg_574 or tmp_i_reg_1114 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st45_fsm_44 or ap_sig_cseq_ST_st53_fsm_52 or ap_sig_cseq_ST_st71_fsm_70)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        grp_fu_515_p0 = tmp_i_reg_1114;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) | (ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52))) begin
        grp_fu_515_p0 = reg_574;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_515_p0 = reg_562;
    end else begin
        grp_fu_515_p0 = 'bx;
    end
end

/// grp_fu_515_p1 assign process. ///
always @ (reg_562 or reg_568 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st45_fsm_44 or ap_sig_cseq_ST_st53_fsm_52 or ap_sig_cseq_ST_st71_fsm_70)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        grp_fu_515_p1 = reg_562;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70))) begin
        grp_fu_515_p1 = reg_568;
    end else begin
        grp_fu_515_p1 = 'bx;
    end
end

/// grp_fu_523_p0 assign process. ///
always @ (reg_574 or tmp_i_reg_1114 or tmp_24_i_reg_1130 or ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st61_fsm_60)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        grp_fu_523_p0 = tmp_24_i_reg_1130;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60))) begin
        grp_fu_523_p0 = reg_574;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_523_p0 = tmp_i_reg_1114;
    end else begin
        grp_fu_523_p0 = 'bx;
    end
end

/// grp_fu_523_p1 assign process. ///
always @ (ap_sig_cseq_ST_st35_fsm_34 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st61_fsm_60)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        grp_fu_523_p1 = ap_const_lv64_3F565D39A0000000;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26))) begin
        grp_fu_523_p1 = ap_const_lv64_3FB99999A0000000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_523_p1 = ap_const_lv64_4000000000000000;
    end else begin
        grp_fu_523_p1 = 'bx;
    end
end

/// grp_fu_530_p0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st3_fsm_2 or i_phi_fu_426_p4 or i_reg_422)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_530_p0 = i_reg_422;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_530_p0 = i_phi_fu_426_p4;
    end else begin
        grp_fu_530_p0 = 'bx;
    end
end

/// in_stream_0_V_id_V0_update assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond2_fu_619_p2 or tmp_7_fu_643_p2 or tmp_11_fu_661_p2 or ap_sig_bdd_348)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & (ap_const_lv1_0 == tmp_11_fu_661_p2) & ~ap_sig_bdd_348)) begin
        in_stream_0_V_id_V0_update = ap_const_logic_1;
    end else begin
        in_stream_0_V_id_V0_update = ap_const_logic_0;
    end
end

/// in_stream_1_V_id_V0_update assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond2_fu_619_p2 or tmp_7_fu_643_p2 or tmp_11_fu_661_p2 or ap_sig_bdd_348)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & (ap_const_lv1_0 == tmp_11_fu_661_p2) & ~ap_sig_bdd_348)) begin
        in_stream_1_V_id_V0_update = ap_const_logic_1;
    end else begin
        in_stream_1_V_id_V0_update = ap_const_logic_0;
    end
end

/// lineBuff_power_val_1_address0 assign process. ///
always @ (tmp_9_reg_990 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st34_fsm_33 or tmp_35_0_1_fu_807_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_power_val_1_address0 = tmp_9_reg_990;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        lineBuff_power_val_1_address0 = tmp_35_0_1_fu_807_p1;
    end else begin
        lineBuff_power_val_1_address0 = 'bx;
    end
end

/// lineBuff_power_val_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st34_fsm_33)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        lineBuff_power_val_1_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_1_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_power_val_1_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_power_val_1_we0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_1_we0 = ap_const_logic_0;
    end
end

/// lineBuff_power_val_2_address0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st3_fsm_2 or tmp_9_fu_675_p1 or lineBuff_power_val_2_addr_reg_1006)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_power_val_2_address0 = lineBuff_power_val_2_addr_reg_1006;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lineBuff_power_val_2_address0 = tmp_9_fu_675_p1;
    end else begin
        lineBuff_power_val_2_address0 = 'bx;
    end
end

/// lineBuff_power_val_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_348)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_348))) begin
        lineBuff_power_val_2_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_2_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_power_val_2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_power_val_2_we0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_2_we0 = ap_const_logic_0;
    end
end

/// lineBuff_val_0_address0 assign process. ///
always @ (tmp_9_reg_990 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or tmp_23_0_1_fu_733_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_val_0_address0 = tmp_9_reg_990;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        lineBuff_val_0_address0 = tmp_23_0_1_fu_733_p1;
    end else begin
        lineBuff_val_0_address0 = 'bx;
    end
end

/// lineBuff_val_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        lineBuff_val_0_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_0_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_val_0_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_val_0_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_0_we0 = ap_const_logic_0;
    end
end

/// lineBuff_val_1_address0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st3_fsm_2 or tmp_9_fu_675_p1 or lineBuff_val_1_addr_reg_996 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or tmp_23_0_1_fu_733_p1 or tmp_6_fu_776_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_996;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        lineBuff_val_1_address0 = tmp_6_fu_776_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        lineBuff_val_1_address0 = tmp_23_0_1_fu_733_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lineBuff_val_1_address0 = tmp_9_fu_675_p1;
    end else begin
        lineBuff_val_1_address0 = 'bx;
    end
end

/// lineBuff_val_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_348 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_348) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        lineBuff_val_1_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_val_1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        lineBuff_val_1_ce1 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_ce1 = ap_const_logic_0;
    end
end

/// lineBuff_val_1_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_val_1_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_we0 = ap_const_logic_0;
    end
end

/// lineBuff_val_2_address0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st3_fsm_2 or tmp_9_fu_675_p1 or lineBuff_val_2_addr_reg_1001 or ap_sig_cseq_ST_st6_fsm_5 or tmp_23_0_1_fu_733_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_1001;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        lineBuff_val_2_address0 = tmp_23_0_1_fu_733_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lineBuff_val_2_address0 = tmp_9_fu_675_p1;
    end else begin
        lineBuff_val_2_address0 = 'bx;
    end
end

/// lineBuff_val_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_348 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_348) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        lineBuff_val_2_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_2_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_val_2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_2_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_2_we0 = ap_const_logic_0;
    end
end

/// out_stream_V_id_V1_update assign process. ///
always @ (brmerge_reg_1100 or ap_sig_cseq_ST_st81_fsm_80 or ap_sig_bdd_566)
begin
    if (((ap_const_lv1_0 == brmerge_reg_1100) & (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & ~ap_sig_bdd_566)) begin
        out_stream_V_id_V1_update = ap_const_logic_1;
    end else begin
        out_stream_V_id_V1_update = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_601_p2 or exitcond2_fu_619_p2 or ap_sig_bdd_348 or ap_sig_bdd_566)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_601_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((~ap_sig_bdd_348 & ~(ap_const_lv1_0 == exitcond2_fu_619_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((ap_const_lv1_0 == exitcond2_fu_619_p2) & ~ap_sig_bdd_348)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            if (~ap_sig_bdd_566) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st81_fsm_80;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_195 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_195 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_202 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_202 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_214 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_214 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_226 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_226 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_237 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_237 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_245 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_254 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_254 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_274 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_274 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_285 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_285 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_295 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_295 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_304 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_304 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_315 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_315 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_331 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_331 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_348 assign process. ///
always @ (in_stream_0_V_id_V0_status or exitcond2_fu_619_p2 or tmp_7_fu_643_p2 or tmp_11_fu_661_p2 or in_stream_1_V_id_V0_status)
begin
    ap_sig_bdd_348 = (((in_stream_0_V_id_V0_status == ap_const_logic_0) & (ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & (ap_const_lv1_0 == tmp_11_fu_661_p2)) | ((ap_const_lv1_0 == exitcond2_fu_619_p2) & (ap_const_lv1_0 == tmp_7_fu_643_p2) & (ap_const_lv1_0 == tmp_11_fu_661_p2) & (in_stream_1_V_id_V0_status == ap_const_logic_0)));
end

/// ap_sig_bdd_382 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_382 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_395 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_395 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_423 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_423 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_435 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_435 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_449 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_449 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_460 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_460 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end

/// ap_sig_bdd_472 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_472 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_482 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_482 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_492 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_492 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_561 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_561 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_566 assign process. ///
always @ (brmerge_reg_1100 or out_stream_V_id_V1_status)
begin
    ap_sig_bdd_566 = ((ap_const_lv1_0 == brmerge_reg_1100) & (out_stream_V_id_V1_status == ap_const_logic_0));
end

/// ap_sig_bdd_660 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_660 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_667 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_667 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_677 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_677 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_685 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_685 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_696 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_696 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_703 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_703 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_711 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_711 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_718 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_718 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_726 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_726 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_742 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_742 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_749 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_749 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_99 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_99 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign brmerge_fu_789_p2 = (p_not_reg_1022 | or_cond82_not_fu_784_p2);
assign col_assign_1_0_2_fu_739_p2 = (tmp_12_reg_1037 + ap_const_lv11_2);
assign countWait_2_fu_613_p2 = (countWait_reg_434 + ap_const_lv21_402);
assign exitcond1_fu_601_p2 = (i_reg_422 == ap_const_lv11_402? 1'b1: 1'b0);
assign exitcond2_fu_619_p2 = (j_reg_446 == ap_const_lv11_402? 1'b1: 1'b0);
assign grp_fu_496_ce = ap_const_logic_1;
assign grp_fu_501_ce = ap_const_logic_1;
assign grp_fu_501_p0 = reg_556;
assign grp_fu_501_p1 = ap_const_lv32_384D8559;
assign grp_fu_506_ce = ap_const_logic_1;
assign grp_fu_506_p0 = reg_574;
assign grp_fu_515_ce = ap_const_logic_1;
assign grp_fu_519_ce = ap_const_logic_1;
assign grp_fu_519_p0 = tmp_23_i_reg_1125;
assign grp_fu_519_p1 = reg_568;
assign grp_fu_523_ce = ap_const_logic_1;
assign grp_fu_530_p2 = (grp_fu_530_p0 == ap_const_lv11_401? 1'b1: 1'b0);
assign i_1_fu_607_p2 = (i_reg_422 + ap_const_lv11_1);
assign i_phi_fu_426_p4 = i_reg_422;
assign icmp1_fu_692_p2 = ($signed(tmp_17_fu_682_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign icmp_fu_754_p2 = ($signed(tmp_16_fu_744_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign idxCol_1_fu_841_p2 = (tmp_18_fu_837_p1 + ap_const_lv11_1);
assign idxCol_2_cast_fu_861_p1 = idxCol_2_fu_853_p3;
assign idxCol_2_fu_853_p3 = ((tmp_13_fu_831_p2)? idxCol_1_fu_841_p2: ap_const_lv11_0);
assign idxRow_1_fu_847_p2 = (idxRow_fu_228 + ap_const_lv32_1);
assign idxRow_2_fu_865_p3 = ((tmp_13_fu_831_p2)? idxRow_fu_228: idxRow_1_fu_847_p2);
assign in_stream_0_V_data_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_dest_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_id_V0_status = (in_stream_0_V_data_V_empty_n & in_stream_0_V_keep_V_empty_n & in_stream_0_V_strb_V_empty_n & in_stream_0_V_user_V_empty_n & in_stream_0_V_last_V_empty_n & in_stream_0_V_id_V_empty_n & in_stream_0_V_dest_V_empty_n);
assign in_stream_0_V_id_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_keep_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_last_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_strb_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_user_V_read = in_stream_0_V_id_V0_update;
assign in_stream_1_V_data_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_dest_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_id_V0_status = (in_stream_1_V_data_V_empty_n & in_stream_1_V_keep_V_empty_n & in_stream_1_V_strb_V_empty_n & in_stream_1_V_user_V_empty_n & in_stream_1_V_last_V_empty_n & in_stream_1_V_id_V_empty_n & in_stream_1_V_dest_V_empty_n);
assign in_stream_1_V_id_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_keep_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_last_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_strb_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_user_V_read = in_stream_1_V_id_V0_update;
assign j_1_fu_625_p2 = (j_reg_446 + ap_const_lv11_1);
assign lineBuff_power_val_1_d0 = lineBuff_power_val_2_load_reg_1027;
assign lineBuff_power_val_2_d0 = converterB_reg_467;
assign lineBuff_val_0_d0 = reg_543;
assign lineBuff_val_1_address1 = tmp_23_0_2_fu_780_p1;
assign lineBuff_val_1_d0 = reg_550;
assign lineBuff_val_2_d0 = converterA_reg_481;
assign or_cond3_fu_760_p2 = (icmp_fu_754_p2 & icmp1_reg_1011);
assign or_cond82_not_demorgan_fu_771_p2 = (icmp_fu_754_p2 & icmp1_reg_1011);
assign or_cond82_not_fu_784_p2 = (or_cond82_not_demorgan_reg_1080 ^ ap_const_lv1_1);
assign out_stream_V_data_V_din = ((or_cond3_reg_1069)? tmp_fu_820_p1: ap_const_lv32_3F800000);
assign out_stream_V_data_V_write = out_stream_V_id_V1_update;
assign out_stream_V_dest_V_din = ap_const_lv5_0;
assign out_stream_V_dest_V_write = out_stream_V_id_V1_update;
assign out_stream_V_id_V1_status = (out_stream_V_data_V_full_n & out_stream_V_keep_V_full_n & out_stream_V_strb_V_full_n & out_stream_V_user_V_full_n & out_stream_V_last_V_full_n & out_stream_V_id_V_full_n & out_stream_V_dest_V_full_n);
assign out_stream_V_id_V_din = ap_const_lv5_0;
assign out_stream_V_id_V_write = out_stream_V_id_V1_update;
assign out_stream_V_keep_V_din = ap_const_lv4_F;
assign out_stream_V_keep_V_write = out_stream_V_id_V1_update;
assign out_stream_V_last_V_din = tmp_last_V_reg_1171;
assign out_stream_V_last_V_write = out_stream_V_id_V1_update;
assign out_stream_V_strb_V_din = ap_const_lv4_F;
assign out_stream_V_strb_V_write = out_stream_V_id_V1_update;
assign out_stream_V_user_V_din = ap_const_lv4_0;
assign out_stream_V_user_V_write = out_stream_V_id_V1_update;
assign p_not_fu_704_p2 = (tmp_s_fu_698_p2 < ap_const_lv21_404? 1'b1: 1'b0);
assign pixConvolved_1_fu_727_p2 = (tmp_12_fu_723_p1 + ap_const_lv11_1);
assign pixConvolved_2_fu_765_p3 = ((or_cond3_fu_760_p2)? pixConvolved_1_reg_1043: tmp_12_reg_1037);
assign pixConvolved_3_cast_fu_880_p1 = pixConvolved_3_fu_873_p3;
assign pixConvolved_3_fu_873_p3 = ((tmp_13_fu_831_p2)? pixConvolved_2_reg_1075: ap_const_lv11_0);
assign pixConvolved_Power_1_fu_801_p2 = (tmp_15_fu_797_p1 + ap_const_lv11_1);
assign pixConvolved_Power_2_fu_811_p3 = ((or_cond3_reg_1069)? pixConvolved_Power_1_reg_1140: tmp_15_reg_1135);
assign pixConvolved_Power_3_cast_fu_891_p1 = pixConvolved_Power_3_fu_884_p3;
assign pixConvolved_Power_3_fu_884_p3 = ((tmp_13_fu_831_p2)? pixConvolved_Power_2_reg_1151: ap_const_lv11_0);
assign tmp_10_fu_655_p2 = (j_reg_446 == ap_const_lv11_0? 1'b1: 1'b0);
assign tmp_11_fu_661_p2 = (tmp_10_fu_655_p2 | tmp_8_fu_649_p2);
assign tmp_12_fu_723_p1 = pixConvolved_fu_224[10:0];
assign tmp_13_fu_831_p2 = ($signed(idxCol_fu_232) < $signed(32'b10000000001)? 1'b1: 1'b0);
assign tmp_15_fu_797_p1 = pixConvolved_Power_fu_220[10:0];
assign tmp_16_fu_744_p4 = {{idxRow_fu_228[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_17_fu_682_p4 = {{idxCol_fu_232[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_18_fu_837_p1 = idxCol_fu_232[10:0];
assign tmp_23_0_1_fu_733_p1 = pixConvolved_1_reg_1043;
assign tmp_23_0_2_fu_780_p1 = col_assign_1_0_2_reg_1054;
assign tmp_23_i_fu_512_p0 = tmp_22_i_reg_1120;
assign tmp_35_0_1_fu_807_p1 = pixConvolved_Power_1_reg_1140;
assign tmp_4_fu_631_p2 = (j_reg_446 == ap_const_lv11_401? 1'b1: 1'b0);
assign tmp_5_fu_637_p2 = (i_reg_422 == ap_const_lv11_0? 1'b1: 1'b0);
assign tmp_6_fu_776_p1 = pixConvolved_fu_224;
assign tmp_7_fu_643_p2 = (tmp_5_fu_637_p2 | grp_fu_530_p2);
assign tmp_8_fu_649_p2 = (j_reg_446 == ap_const_lv11_401? 1'b1: 1'b0);
assign tmp_9_fu_675_p1 = idxCol_fu_232;
assign tmp_fu_820_p1 = result_reg_1166;
assign tmp_last_V_fu_816_p2 = (tmp_1_reg_956 & tmp_4_reg_969);
assign tmp_s_fu_698_p2 = (countWait_1_reg_457 + ap_const_lv21_1);
always @ (posedge ap_clk)
begin
    tmp_9_reg_990[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    pixConvolved_Power_fu_220[31:11] <= 21'b000000000000000000000;
    pixConvolved_fu_224[31:11] <= 21'b000000000000000000000;
    idxCol_fu_232[31:11] <= 21'b000000000000000000000;
end



endmodule //hls_hotspot_func_hls

